{"version":3,"file":"ethSimulateTypes.js","sourceRoot":"","sources":["../../ts/types/ethSimulateTypes.ts"],"names":[],"mappings":"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","sourcesContent":["import * as funtypes from 'funtypes'\nimport { EthereumAccessList, EthereumAddress, EthereumBlockTag, EthereumBytes32, EthereumData, EthereumInput, EthereumQuantity, EthereumQuantitySmall, EthereumTimestamp, LiteralConverterParserFactory } from './ethereumTypes.js'\n\ntype AccountOverride = funtypes.Static<typeof AccountOverride>\nconst AccountOverride = funtypes.ReadonlyPartial({\n\tstate: funtypes.ReadonlyRecord(funtypes.String, EthereumBytes32),\n\tstateDiff: funtypes.ReadonlyRecord(funtypes.String, EthereumBytes32),\n\tnonce: EthereumQuantitySmall,\n\tbalance: EthereumQuantity,\n\tcode: EthereumData,\n\tmovePrecompileToAddress: EthereumAddress,\n})\n\ntype BlockOverride = funtypes.Static<typeof BlockOverride>\nconst BlockOverride = funtypes.Partial({\n    number: EthereumQuantity,\n    prevRandao: EthereumQuantity,\n    time: EthereumTimestamp,\n    gasLimit: EthereumQuantitySmall,\n    feeRecipient: EthereumAddress,\n    baseFeePerGas: EthereumQuantity,\n}).asReadonly()\n\nexport type TransactionType = funtypes.Static<typeof TransactionType>\nexport const TransactionType = funtypes.Union(\n\tfuntypes.Literal(0).withParser(LiteralConverterParserFactory(0, 'legacy' as const)),\n\tfuntypes.Literal(null).withParser(LiteralConverterParserFactory(null, 'legacy' as const)),\n\tfuntypes.Literal(undefined).withParser(LiteralConverterParserFactory(undefined, 'legacy' as const)),\n\tfuntypes.Literal(1).withParser(LiteralConverterParserFactory(1, '2930' as const)),\n\tfuntypes.Literal(2).withParser(LiteralConverterParserFactory(2, '1559' as const)),\n\tfuntypes.Literal(3).withParser(LiteralConverterParserFactory(3, '4844' as const)),\n)\n\ntype BlockCall = funtypes.Static<typeof BlockCall>\nconst BlockCall = funtypes.Partial({\n\ttype: TransactionType,\n\tfrom: EthereumAddress,\n\tnonce: EthereumQuantity,\n\tmaxFeePerGas: EthereumQuantity,\n\tmaxPriorityFeePerGas: EthereumQuantity,\n\tgas: EthereumQuantity,\n\tto: funtypes.Union(EthereumAddress, funtypes.Null),\n\tvalue: EthereumQuantity,\n\tinput: EthereumInput,\n\tchainId: EthereumQuantity,\n\taccessList: EthereumAccessList,\n})\n\nexport type StateOverrides = funtypes.Static<typeof StateOverrides>\nexport const StateOverrides = funtypes.ReadonlyRecord(funtypes.String, AccountOverride)\n\nexport type BlockCalls = funtypes.Static<typeof BlockCalls>\nexport const BlockCalls = funtypes.Intersect(\n\tfuntypes.ReadonlyObject({\n\t\tcalls: funtypes.ReadonlyArray(BlockCall),\n\t}),\n\tfuntypes.ReadonlyPartial({\n\t\tstateOverrides: StateOverrides,\n\t\tblockOverrides: BlockOverride,\n\t})\n)\n\nexport type ethSimulateV1ParamObject = funtypes.Static<typeof ethSimulateV1ParamObject>\nconst ethSimulateV1ParamObject = funtypes.ReadonlyObject({\n\tblockStateCalls: funtypes.ReadonlyArray(BlockCalls),\n\ttraceTransfers: funtypes.Boolean,\n\tvalidation: funtypes.Boolean,\n})\n\nexport type EthSimulateV1Params = funtypes.Static<typeof EthSimulateV1Params>\nexport const EthSimulateV1Params = funtypes.ReadonlyObject({\n\tmethod: funtypes.Literal('eth_simulateV1'),\n\tparams: funtypes.ReadonlyTuple(ethSimulateV1ParamObject, EthereumBlockTag),\n})\n\nexport type EthereumEvent = funtypes.Static<typeof EthereumEvent>\nexport const EthereumEvent = funtypes.ReadonlyObject({\n\taddress: EthereumAddress,\n\tdata: EthereumInput,\n\ttopics: funtypes.ReadonlyArray(EthereumBytes32),\n}).asReadonly()\n\ntype CallResultLog = funtypes.Static<typeof CallResultLog>\nconst CallResultLog = funtypes.Intersect(\n\tEthereumEvent,\n\tfuntypes.ReadonlyObject({\n\t\tlogIndex: EthereumQuantity,\n\t\tblockHash: EthereumBytes32,\n\t\tblockNumber: EthereumQuantity,\n\t}),\n\tfuntypes.ReadonlyPartial({ // these are not optional in the eth_simulateV1 spec, but they are not standard for logs\n\t\ttransactionHash: EthereumBytes32,\n\t\ttransactionIndex: EthereumQuantity,\n\t})\n)\n\ntype CallResultLogs = funtypes.Static<typeof CallResultLogs>\nconst CallResultLogs = funtypes.ReadonlyArray(CallResultLog)\n\ntype EthSimulateCallResultFailure = funtypes.Static<typeof EthSimulateCallResultFailure>\nconst EthSimulateCallResultFailure = funtypes.ReadonlyObject({\n\t  status: funtypes.Literal('0x0').withParser(LiteralConverterParserFactory('0x0', 'failure' as const)),\n\t  returnData: EthereumData,\n\t  gasUsed: EthereumQuantitySmall,\n\t  error: funtypes.ReadonlyObject({\n\t\t  code: funtypes.Number,\n\t\t  message: funtypes.String\n\t  })\n})\n\ntype EthSimulateCallResultSuccess = funtypes.Static<typeof EthSimulateCallResultSuccess>\nconst EthSimulateCallResultSuccess = funtypes.ReadonlyObject({\n\treturnData: EthereumData,\n\tgasUsed: EthereumQuantitySmall,\n\tstatus: funtypes.Literal('0x1').withParser(LiteralConverterParserFactory('0x1', 'success' as const)),\n\tlogs: CallResultLogs\n})\n\nexport type EthSimulateV1CallResult = funtypes.Static<typeof EthSimulateV1CallResult>\nexport const EthSimulateV1CallResult = funtypes.Union(EthSimulateCallResultFailure, EthSimulateCallResultSuccess)\n\nexport type EthSimulateV1CallResults = funtypes.Static<typeof EthSimulateV1CallResults>\nexport const EthSimulateV1CallResults = funtypes.ReadonlyArray(EthSimulateV1CallResult)\n\ntype EthSimulateV1BlockResult = funtypes.Static<typeof EthSimulateV1BlockResult>\nconst EthSimulateV1BlockResult = funtypes.ReadonlyObject({\n    number: EthereumQuantity,\n    hash: EthereumBytes32,\n    timestamp: EthereumQuantity,\n    gasLimit: EthereumQuantitySmall,\n    gasUsed: EthereumQuantitySmall,\n    baseFeePerGas: EthereumQuantity,\n    calls: EthSimulateV1CallResults,\n})\n\nexport type EthSimulateV1Result = funtypes.Static<typeof EthSimulateV1Result>\nexport const EthSimulateV1Result = funtypes.ReadonlyArray(EthSimulateV1BlockResult)\n\ntype JsonRpcSuccessResponse = funtypes.Static<typeof JsonRpcSuccessResponse>\nconst JsonRpcSuccessResponse = funtypes.ReadonlyObject({\n\tjsonrpc: funtypes.Literal('2.0'),\n\tid: funtypes.Union(funtypes.String, funtypes.Number),\n\tresult: funtypes.Unknown,\n}).asReadonly()\n\nexport type JsonRpcErrorResponse = funtypes.Static<typeof JsonRpcErrorResponse>\nexport const JsonRpcErrorResponse = funtypes.ReadonlyObject({\n\tjsonrpc: funtypes.Literal('2.0'),\n\tid: funtypes.Union(funtypes.String, funtypes.Number),\n\terror: funtypes.ReadonlyObject({\n\t\tcode: funtypes.Number,\n\t\tmessage: funtypes.String,\n\t\tdata: funtypes.Unknown,\n\t}).asReadonly(),\n}).asReadonly()\n\nexport type JsonRpcResponse = funtypes.Static<typeof JsonRpcResponse>\nexport const JsonRpcResponse = funtypes.Union(JsonRpcErrorResponse, JsonRpcSuccessResponse)\n"]}