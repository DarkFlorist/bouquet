{"version":3,"file":"flashbots.js","sourceRoot":"","sources":["../../ts/library/flashbots.ts"],"names":[],"mappings":"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","sourcesContent":["import { AddressLike, ethers, id, keccak256, toUtf8Bytes, Transaction } from 'ethers'\nimport { BlockInfo, Bundle, Signers } from '../types/types.js'\nimport { createBundleTransactions, getMaxBaseFeeInFutureBlock, getRawTransactionsAndCalculateFeesAndNonces } from './bundleUtils.js'\nimport { ProviderStore } from './provider.js'\nimport { BouquetNetwork } from '../types/bouquetTypes.js'\nimport { EthSimulateV1CallResult, EthSimulateV1CallResults, EthSimulateV1Params, EthSimulateV1Result, JsonRpcResponse, TransactionType } from '../types/ethSimulateTypes.js'\nimport { serialize } from '../types/ethereumTypes.js'\nimport { addressString, min, hexStringToUint8Array } from './utils.js'\n\ninterface TransactionSimulationBase {\n\ttxHash: string\n\tgasUsed: number\n\tgasFees: string\n\tgasPrice: string\n\ttoAddress: string\n\tfromAddress: string\n\tcoinbaseDiff: string\n}\n\nexport interface TransactionSimulationSuccess extends TransactionSimulationBase {\n\tvalue: string\n\tethSentToCoinbase: string\n}\n\nexport interface TransactionSimulationRevert extends TransactionSimulationBase {\n\terror: string\n\trevert: string\n}\n\nexport type TransactionSimulation = TransactionSimulationSuccess | TransactionSimulationRevert\n\nexport interface RelayResponseError {\n\terror: {\n\t\tmessage: string\n\t\tcode: number\n\t}\n}\n\nexport type SimulationResponseSuccess = {\n\tbundleGasPrice: bigint\n\tbundleHash: string\n\tcoinbaseDiff: bigint\n\tethSentToCoinbase: bigint\n\tgasFees: bigint\n\tresults: Array<TransactionSimulation>\n\ttotalGasUsed: bigint\n\tstateBlockNumber: number\n\tfirstRevert: TransactionSimulation | undefined\n} | {\n\ttotalGasUsed: bigint\n\tfirstRevert: EthSimulateV1CallResult & {\n\t\ttoAddress: string\n\t\tfromAddress: string | undefined\n\t} | undefined\n\tresults: EthSimulateV1CallResults\n\tgasFees: bigint\n}\n\nexport type SimulationResponse = SimulationResponseSuccess | RelayResponseError\n\nexport async function simulateBundle(\n\tbundle: Bundle,\n\tfundingAmountMin: bigint,\n\tprovider: ProviderStore,\n\tsigners: Signers,\n\tblockInfo: BlockInfo,\n\tnetwork: BouquetNetwork\n): Promise<SimulationResponse> {\n\tif (network.blocksInFuture <= 0n) throw new Error('Blocks in future is negative or zero')\n\tconst maxBaseFee = getMaxBaseFeeInFutureBlock(blockInfo.baseFee, network.blocksInFuture)\n\tconst bundleTransactions = createBundleTransactions(bundle, signers, blockInfo, network.blocksInFuture, fundingAmountMin)\n\tconst txs = await getRawTransactionsAndCalculateFeesAndNonces(bundleTransactions, provider.provider, blockInfo, maxBaseFee)\n\n\tconst bigIntify = (ethersValue: ethers.BigNumberish | null | undefined | AddressLike) => ethersValue ? BigInt(ethersValue.toString()) : undefined\n\n\tswitch(network.relayMode) {\n\t\tcase 'mempool': {\n\t\t\tif (network.mempoolSimulationRpcEndpoint === undefined) throw new Error('mempoolSimulationRpcEndpoint is not defined')\n\t\t\tconst data: EthSimulateV1Params = {\n\t\t\t\tmethod: 'eth_simulateV1',\n\t\t\t\tparams: [ { 'blockStateCalls': [ { calls: txs.map((tx) => ({\n\t\t\t\t\ttype: TransactionType.parse(tx.transaction.type),\n\t\t\t\t\tto: bigIntify(tx.transaction.to),\n\t\t\t\t\tfrom: bigIntify(tx.transaction.from),\n\t\t\t\t\tnonce: bigIntify(tx.transaction.nonce),\n\t\t\t\t\tgas: bigIntify(tx.transaction.gasLimit),\n\t\t\t\t\tmaxPriorityFeePerGas: bigIntify(tx.transaction.maxPriorityFeePerGas),\n\t\t\t\t\tmaxFeePerGas: bigIntify(tx.transaction.maxFeePerGas),\n\t\t\t\t\tinput: tx.transaction.data === null || tx.transaction.data === undefined ? new Uint8Array() : hexStringToUint8Array(tx.transaction.data),\n\t\t\t\t\tvalue: bigIntify(tx.transaction.value),\n\t\t\t\t\tchainId: bigIntify(tx.transaction.chainId),\n\t\t\t\t\taccessList: [],\n\t\t\t\t})) } ], traceTransfers: false, validation: true }, 'latest' ]\n\t\t\t} as const\n\t\t\tconst serialized = serialize(EthSimulateV1Params, data)\n\t\t\ttry {\n\t\t\t\tconst request = await fetch(network.mempoolSimulationRpcEndpoint, { method: 'POST', body: JSON.stringify({ jsonrpc: '2.0', id: 0, ...serialized }), headers: { 'Content-Type': 'application/json' }, signal: AbortSignal.timeout(60000) })\n\t\t\t\tconst response = JsonRpcResponse.parse(await request.json())\n\t\t\t\tif ('error' in response) {\n\t\t\t\t\tconsole.log(response)\n\t\t\t\t\tthrow new Error(response.error.message)\n\t\t\t\t}\n\t\t\t\tconst parsed = EthSimulateV1Result.parse(response.result)\n\t\t\t\tconst calls = parsed[0].calls\n\n\t\t\t\treturn {\n\t\t\t\t\ttotalGasUsed: calls.reduce((a, b) => a + b.gasUsed, 0n),\n\t\t\t\t\tfirstRevert: calls.map((call, index) => {\n\t\t\t\t\t\tconst to = bigIntify(txs[index].transaction.to)\n\t\t\t\t\t\tif (to === undefined) throw new Error('to is undefined')\n\t\t\t\t\t\tconst from = bigIntify(txs[index].transaction.from)\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...call,\n\t\t\t\t\t\t\ttoAddress: addressString(to),\n\t\t\t\t\t\t\tfromAddress: from !== undefined ? addressString(from) : undefined,\n\t\t\t\t\t\t}\n\t\t\t\t\t}).find((txSim) => txSim.status === 'failure'),\n\t\t\t\t\tresults: calls,\n\t\t\t\t\tgasFees: txs.reduce((totalFee, tx, currentIndex) => {\n\t\t\t\t\t\tif (tx.transaction.gasPrice) return totalFee + BigInt(tx.transaction.gasPrice) * calls[currentIndex].gasUsed\n\t\t\t\t\t\treturn totalFee + min(parsed[0].baseFeePerGas + BigInt(tx.transaction.maxPriorityFeePerGas || 0n), BigInt(tx.transaction.maxFeePerGas || 0n))\n\t\t\t\t\t}, 0n),\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (error instanceof DOMException && error.name === 'TimeoutError') throw new Error(`Simulation timed out to RPC: ${network.mempoolSimulationRpcEndpoint}`)\n\t\t\t\tthrow error\n\t\t\t}\n\t\t}\n\t\tcase 'relay': {\n\t\t\tif (network.simulationRelayEndpoint === undefined) throw new Error('simulationRelayEndpoint is not defined')\n\t\t\tconst payload = JSON.stringify({ jsonrpc: '2.0', method: 'eth_callBundle', params: [{ txs: txs.map((x) => x.rawTransaction), blockNumber: `0x${blockInfo.blockNumber.toString(16)}`, stateBlockNumber: 'latest' }] })\n\t\t\tconst flashbotsSig = `${await provider.authSigner.getAddress()}:${await provider.authSigner.signMessage(id(payload))}`\n\t\t\tconst request = await fetch(network.simulationRelayEndpoint,\n\t\t\t\t{ method: 'POST', body: payload, headers: { 'Content-Type': 'application/json', 'X-Flashbots-Signature': flashbotsSig } }\n\t\t\t)\n\t\t\tconst response = await request.json()\n\n\t\t\tif (response.error !== undefined && response.error !== null) {\n\t\t\t\treturn {\n\t\t\t\t\terror: {\n\t\t\t\t\t\tmessage: response.error.message,\n\t\t\t\t\t\tcode: response.error.code,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst callResult = response.result\n\t\t\treturn {\n\t\t\t\tbundleGasPrice: BigInt(callResult.bundleGasPrice),\n\t\t\t\tbundleHash: callResult.bundleHash,\n\t\t\t\tcoinbaseDiff: BigInt(callResult.coinbaseDiff),\n\t\t\t\tethSentToCoinbase: BigInt(callResult.ethSentToCoinbase),\n\t\t\t\tgasFees: BigInt(callResult.gasFees),\n\t\t\t\tresults: callResult.results,\n\t\t\t\tstateBlockNumber: callResult.stateBlockNumber,\n\t\t\t\ttotalGasUsed: callResult.results.reduce((a: bigint, b: TransactionSimulation) => a + BigInt(b.gasUsed), 0n),\n\t\t\t\tfirstRevert: callResult.results.find((txSim: TransactionSimulation) => 'revert' in txSim || 'error' in txSim),\n\t\t\t}\n\t\t}\n\t}\n}\n\nlet bundleId = 1\nexport async function sendBundle(bundle: Bundle, targetBlock: bigint, fundingAmountMin: bigint, provider: ProviderStore, signers: Signers, blockInfo: BlockInfo, network: BouquetNetwork) {\n\tif (network.blocksInFuture <= 0n) throw new Error('Blocks in future is negative or zero')\n\tconst maxBaseFee = getMaxBaseFeeInFutureBlock(blockInfo.baseFee, network.blocksInFuture)\n\tconst transactions = (await getRawTransactionsAndCalculateFeesAndNonces(\n\t\tcreateBundleTransactions(bundle, signers, blockInfo, network.blocksInFuture, fundingAmountMin),\n\t\tprovider.provider,\n\t\tblockInfo,\n\t\tmaxBaseFee,\n\t)).map((x) => x.rawTransaction)\n\n\tswitch(network.relayMode) {\n\t\tcase 'mempool': {\n\t\t\tconst payloads = transactions.map((transaction, index) => JSON.stringify({\n\t\t\t\tjsonrpc: '2.0',\n\t\t\t\tmethod: 'eth_sendRawTransaction',\n\t\t\t\tid: index,\n\t\t\t\tparams: [transaction]\n\t\t\t}))\n\t\t\tif (network.mempoolSubmitRpcEndpoint === undefined) throw new Error('MemPool Submit RPC Endpoint is not set')\n\t\t\tfor (const payload of payloads) {\n\t\t\t\tconst MAX_ATTEMPTS = 40\n\t\t\t\tfor (var attempt = 0; attempt < MAX_ATTEMPTS; attempt++ ) {\n\t\t\t\t\tconst request = await fetch(network.mempoolSubmitRpcEndpoint, { method: 'POST', body: payload, headers: { 'Content-Type': 'application/json' } })\n\t\t\t\t\tconst response = await request.json()\n\t\t\t\t\tconsole.log(response)\n\t\t\t\t\tif (response.error !== undefined) {\n\t\t\t\t\t\tif (attempt >= MAX_ATTEMPTS - 1) throw new Error(response.error.message)\n\t\t\t\t\t\tawait new Promise(r => setTimeout(r, 50 + attempt * 50))\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst bundleTransactions = transactions.map((signedTransaction) => {\n\t\t\t\tconst transactionDetails = Transaction.from(signedTransaction)\n\t\t\t\treturn {\n\t\t\t\t\tsignedTransaction,\n\t\t\t\t\thash: keccak256(signedTransaction),\n\t\t\t\t\taccount: transactionDetails.from || '0x0',\n\t\t\t\t\tnonce: BigInt(transactionDetails.nonce),\n\t\t\t\t}\n\t\t\t})\n\n\t\t\treturn { bundleTransactions, bundleIdentifier: ethers.keccak256(toUtf8Bytes(payloads.join('|'))) }\n\t\t}\n\t\tcase 'relay': {\n\t\t\tconst payload = JSON.stringify({\n\t\t\t\tjsonrpc: '2.0',\n\t\t\t\tmethod: 'eth_sendBundle',\n\t\t\t\tid: bundleId++,\n\t\t\t\tparams: [{ txs: transactions, blockNumber: `0x${targetBlock.toString(16)}`, revertingTxHashes: [] }]\n\t\t\t})\n\t\t\tconst flashbotsSig = `${await provider.authSigner.getAddress()}:${await provider.authSigner.signMessage(id(payload))}`\n\n\t\t\tif (network.submissionRelayEndpoint === undefined) throw new Error('submissionRelayEndpoint is not defined')\n\t\t\tconst request = await fetch(network.submissionRelayEndpoint,\n\t\t\t\t{ method: 'POST', body: payload, headers: { 'Content-Type': 'application/json', 'X-Flashbots-Signature': flashbotsSig } }\n\t\t\t)\n\t\t\tconst response = await request.json()\n\n\t\t\tif (response.error !== undefined && response.error !== null) {\n\t\t\t\tthrow {\n\t\t\t\t\tmessage: response.error.message,\n\t\t\t\t\tcode: response.error.code,\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst bundleTransactions = transactions.map((signedTransaction) => {\n\t\t\t\tconst transactionDetails = Transaction.from(signedTransaction)\n\t\t\t\treturn {\n\t\t\t\t\tsignedTransaction,\n\t\t\t\t\thash: keccak256(signedTransaction),\n\t\t\t\t\taccount: transactionDetails.from || '0x0',\n\t\t\t\t\tnonce: BigInt(transactionDetails.nonce),\n\t\t\t\t}\n\t\t\t})\n\n\t\t\treturn { bundleTransactions, bundleIdentifier: response.result.bundleHash }\n\t\t}\n\t}\n}\n\nexport async function checkBundleInclusion(transactions: { hash: string }[], provider: ProviderStore) {\n\tconst receipts = await Promise.all(transactions.map((tx) => provider.provider.getTransactionReceipt(tx.hash)))\n\tconst includedInBlocks = Array.from(new Set(receipts.filter((receipt): receipt is ethers.TransactionReceipt => receipt !== null).map((receipt) => BigInt(receipt.blockNumber))))\n\treturn { transactions, included: receipts.filter(x => x === null).length === 0, includedInBlocks }\n}\n"]}