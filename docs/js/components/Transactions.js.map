{"version":3,"file":"Transactions.js","sourceRoot":"","sources":["../../ts/components/Transactions.tsx"],"names":[],"mappings":";AAAA,OAAO,EAA0B,SAAS,EAAE,eAAe,EAAE,MAAM,iBAAiB,CAAA;AACpF,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAA0B,MAAM,QAAQ,CAAA;AAE5G,OAAO,EAAqB,SAAS,EAAW,MAAM,mBAAmB,CAAA;AAEzE,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAA;AACpC,OAAO,EAAE,aAAa,EAAE,MAAM,0BAA0B,CAAA;AACxD,OAAO,EAAmC,eAAe,EAAE,MAAM,0BAA0B,CAAA;AAC3F,OAAO,EAAE,YAAY,EAAE,MAAM,YAAY,CAAA;AACzC,OAAO,EAAE,uBAAuB,EAAE,MAAM,8BAA8B,CAAA;AACtE,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAA;AACnD,OAAO,EAAE,qBAAqB,EAAE,MAAM,aAAa,CAAA;AACnD,OAAO,EAAE,qBAAqB,EAAE,yBAAyB,EAAE,sBAAsB,EAAE,MAAM,sBAAsB,CAAA;AAC/G,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAA;AAE5C,SAAS,4BAA4B,CAAC,EAA0B;IAC/D,IAAI,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,4BAAG,GAAG,EAAE,CAAC,IAAI,IAAI,GAAI,CAAA;IACjE,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,YAAG,KAAK,EAAC,MAAM,YAAE,GAAG,CAAC,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,EAAE,GAAK,CAAC,CAAA;IACpH,OAAO,CACN,8BACC,sBAAI,GAAG,EAAE,CAAC,IAAI,GAAG,GAAK,EACrB,MAAM,EACP,4BAAQ,IACN,CACH,CAAA;AACF,CAAC;AACD,MAAM,eAAe,GAAG,oCAAoC,CAAA;AAE5D,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,EAC5B,QAAQ,EACR,MAAM,EACN,SAAS,EACT,eAAe,EACf,OAAO,GAQP,EAAE,EAAE;IACJ,MAAM,UAAU,GAAG,SAAS,CAAmC,EAAE,CAAC,CAAA;IAClE,MAAM,mBAAmB,GAAG,SAAS,CAAiC,EAAE,CAAC,CAAA;IACzE,MAAM,qBAAqB,GAAG,SAAS,CAAsE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAA;IAEjI,SAAS,gBAAgB;QACxB,IAAI,CAAC,MAAM,CAAC,KAAK;YAAE,OAAM;QACzB,MAAM,UAAU,GAAG,eAAe,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,CAAA;QAC3E,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,CAAC,OAAO;YAAE,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;IAC5H,CAAC;IAED,MAAM,YAAY,GAAG,aAAa,EAAE,CAAA;IAEpC,KAAK,UAAU,QAAQ,CAAC,OAAuB,EAAE,OAAe;QAC/D,MAAM,uBAAuB,GAAG,UAAU,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAA;QACjE,IAAI,CAAC;YACJ,IAAI,CAAC;gBACJ,IAAI,OAAO,CAAC,gBAAgB,KAAK,SAAS,IAAI,OAAO,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBACnF,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,GAAI,OAAO,CAAC,gBAAiB,qDAAsD,uBAAwB,WAAY,eAAgB,EAAE,CAAC,CAAA;oBACrK,OAAO,yBAAyB,CAAC,SAAS,CAAC,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC,CAAA;gBAChE,CAAC;YACF,CAAC;YAAC,OAAM,KAAc,EAAE,CAAC;gBACxB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;YACrB,CAAC;YACD,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,kDAAmD,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAE,IAAK,uBAAwB,gBAAgB,CAAC,CAAA;YACzJ,MAAM,MAAM,GAAG,sBAAsB,CAAC,SAAS,CAAC,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC,CAAA;YACpE,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;gBACpB,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;gCACtD,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC;gCAC5C,KAAK,EAAE,GAAG,CAAC,iCAAiC;6BAC5C,CAAC,EAAE,EAAW,CAAA;YAChB,CAAC;QACF,CAAC;QAAC,OAAM,KAAc,EAAE,CAAC;YACxB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;YACpB,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,EAAW,CAAA;QAC3D,CAAC;QACD,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,EAAW,CAAA;IAC3D,CAAC;IAED,KAAK,UAAU,SAAS;QACvB,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY;YAAE,OAAM;QACvD,IAAI,CAAC;YACJ,MAAM,eAAe,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAa,CAAA;YAClJ,MAAM,IAAI,GAA2B,EAAE,CAAA;YAEvC,MAAM,OAAO,GAAG,UAAU,CAAC,eAAe,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,OAAO,IAAI,EAAE,CAAC,CAAA;YAChF,MAAM,gBAAgB,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,EAAE,CAAC,MAAM,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAA;YACpH,wGAAwG;YACxG,KAAK,MAAM,QAAQ,IAAI,gBAAgB,EAAE,CAAC;gBACzC,IAAI,QAAQ,CAAC,OAAO,KAAK,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,KAAK,GAAG;oBAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;qBAChF,CAAC;oBACL,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,cAAc,KAAK,EAAE,EAAE,CAAC;wBAC9F,MAAM,OAAO,GAAG,MAAM,KAAK,CAAC,GAAI,OAAO,CAAC,gBAAiB,8CAA8C,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,WAAY,eAAgB,EAAE,CAAC,CAAA;wBAC5L,MAAM,UAAU,GAAG,qBAAqB,CAAC,SAAS,CAAC,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC,CAAA;wBACxE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAA;oBACvG,CAAC;yBAAM,CAAC;wBACP,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,mCAAmC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAA;oBAC3J,CAAC;gBACF,CAAC;YACF,CAAC;YACD,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;gBACnD,IAAI,IAAI;oBAAE,OAAO,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,eAAe,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,SAAS,CAAC,IAAI,CAAC,EAAE,CAAA;;oBAC1E,OAAO,GAAG,CAAA;YAChB,CAAC,EAAE,EAAE,CAAC,CAAA;QACP,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YAChB,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAA;YAChD,UAAU,CAAC,KAAK,GAAG,EAAE,CAAA;QACtB,CAAC;IACF,CAAC;IAED,eAAe,CAAC,GAAG,EAAE;QACpB,IAAI,UAAU,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;YACtC,iBAAiB,EAAE,CAAA;QACpB,CAAC;QACD,IAAI,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,aAAa,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,UAAU;YAAE,qBAAqB,EAAE,CAAA;IACvH,CAAC,CAAC,CAAA;IAEF,MAAM,iBAAiB,GAAG,KAAK,IAAI,EAAE;QACpC,IAAI,CAAC,MAAM,CAAC,KAAK;YAAE,OAAM;QACzB,mBAAmB,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE;YAChE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBAC9C,MAAM,YAAY,GAAG,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;gBACzC,MAAM,aAAa,GAAG,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,gBAAgB,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,KAAK,IAAI,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAA;gBACrO,OAAO,aAAa,CAAC,CAAC,CAAC,4BAA4B,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAA;YAC1E,CAAC;YACD,OAAO,IAAI,CAAA;QACZ,CAAC,CAAC,CAAA;IACH,CAAC,CAAA;IAED,MAAM,OAAO,GAAG,KAAK,IAAI,EAAE;QAC1B,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,aAAa,IAAI,CAAC,MAAM,CAAC,KAAK;YAAE,OAAO,KAAK,CAAA;QACnF,IAAI,CAAC;YACJ,+BAA+B;YAC/B,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,gCAAgC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAA;YACnG,MAAM,QAAQ,GAAG,uBAAuB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA;YAC3D,IAAI,CAAC,QAAQ,CAAC,OAAO;gBAAE,OAAO,KAAK,CAAA;YACnC,IAAI,6BAA6B,GAAG,eAAe,CAAC,KAAK,CAAC,SAAS,CAAC,uBAAuB,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;YACrN,IAAI,6BAA6B,CAAC,MAAM,KAAK,CAAC;gBAAE,OAAO,KAAK,CAAA;YAE5D,wBAAwB;YACxB,IAAI,6BAA6B,CAAC,MAAM,IAAI,CAAC,IAAI,6BAA6B,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,6BAA6B,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,6BAA6B,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;gBACnM,MAAM,YAAY,GAAG,6BAA6B,CAAC,CAAC,CAAC,CAAC,IAAI,CAAA;gBAC1D,6BAA6B,GAAG,6BAA6B,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,KAAK,YAAY,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA;YACpI,CAAC;YAED,UAAU;YACV,MAAM,gBAAgB,GAAG,eAAe,CAAC,SAAS,CAAC,6BAA6B,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAA;YACrH,MAAM,YAAY,GAAG,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAA;YAC7G,OAAO,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAA;QACzE,CAAC;QAAC,MAAM,CAAC;YACR,OAAO,KAAK,CAAA;QACb,CAAC;IACF,CAAC,CAAA;IAED,MAAM,sBAAsB,GAAG,KAAK,IAAI,EAAE;QACzC,MAAM,SAAS,GAAG,MAAM,OAAO,EAAE,CAAA;QACjC,qBAAqB,CAAC,KAAK,GAAG,EAAE,GAAG,qBAAqB,CAAC,KAAK,EAAE,SAAS,EAAE,CAAA;IAC5E,CAAC,CAAA;IAED,KAAK,UAAU,qBAAqB;QACnC,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,aAAa;YAAE,OAAM;QAC5D,MAAM,SAAS,GAAG,MAAM,OAAO,EAAE,CAAA;QACjC,aAAa,CAAC,qBAAqB,CAAC,KAAK,CAAC,UAAU,CAAC,CAAA;QACrD,qBAAqB,CAAC,KAAK,GAAG,EAAE,SAAS,EAAE,UAAU,EAAE,WAAW,CAAC,sBAAsB,EAAE,KAAK,CAAC,EAAE,CAAA;IACpG,CAAC;IAED,OAAO,CACN,8BACC,aAAI,SAAS,EAAC,oBAAoB,kCAAuB,EACzD,eAAK,SAAS,EAAC,qBAAqB,aACnC,KAAC,MAAM,IAAC,OAAO,EAAC,WAAW,EAAC,QAAQ,EAAE,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,KAAK,SAAS,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,8DAAwD,EAC1L,KAAC,MAAM,IAAC,OAAO,EAAC,WAAW,EAAC,OAAO,EAAE,gBAAgB,YAAE,uDACtD,cACC,SAAS,EAAC,kBAAkB,iBAChB,MAAM,EAClB,IAAI,EAAC,MAAM,EACX,MAAM,EAAC,cAAc,kBACR,KAAK,EAClB,OAAO,EAAC,WAAW,EACnB,KAAK,EAAC,4BAA4B,YAElC,eACC,CAAC,EAAC,oOAAoO,oBACvN,OAAO,qBACN,OAAO,GAChB,GACH,IACJ,GACM,IACJ,EACL,qBAAqB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,KAAC,YAAY,IAAC,OAAO,EAAC,MAAM,EAAC,KAAK,EAAC,uCAAuC,EAAC,WAAW,EAAE,wIAAwG,iBAAQ,OAAO,EAAE,GAAG,EAAE,CAAC,qBAAqB,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,eAAe,CAAC,EAAE,KAAK,EAAC,oCAAoC,wCAAiC,SAAI,GAAI,CAAC,CAAC,CAAC,IAAI,EACxa,cAAK,KAAK,EAAC,4BAA4B,YACrC,MAAM,CAAC,KAAK,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,CAC9C,eAAK,KAAK,EAAC,iDAAiD,aAC3D,cAAK,KAAK,EAAC,2DAA2D,YACrE,gBAAM,KAAK,EAAC,mBAAmB,kBAAG,KAAK,IAAQ,GAC1C,EACN,eAAK,KAAK,EAAC,oFAAoF,aAC9F,eAAK,KAAK,EAAC,yBAAyB,aACnC,eAAM,KAAK,EAAC,iBAAiB,qBAAY,EACzC,eAAM,KAAK,EAAC,0CAA0C,YACpD,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,GACnD,IACF,EACN,eAAK,KAAK,EAAC,yBAAyB,aACnC,eAAM,KAAK,EAAC,iBAAiB,mBAAU,EACvC,eAAM,KAAK,EAAC,0CAA0C,YAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,qBAAqB,GAAQ,IAC/G,EACN,eAAK,KAAK,EAAC,yBAAyB,aACnC,eAAM,KAAK,EAAC,iBAAiB,sBAAa,EAC1C,gBAAM,KAAK,EAAC,0CAA0C,aAAE,WAAW,EAAE,WAAW,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,SAAS,IAAI,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,SAAK,WAAW,EAAE,WAAW,CAAC,EAAE,CAAC,QAAQ,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,gBAAgB,IAC3W,EACL,mBAAmB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACnC,eAAK,KAAK,EAAC,yBAAyB,aACnC,eAAM,KAAK,EAAC,iBAAiB,qBAAY,EACzC,eAAM,KAAK,EAAC,2DAA2D,YAAE,mBAAmB,CAAC,KAAK,CAAC,KAAK,CAAC,GAAQ,IAC5G,CACN,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CACrC,eAAK,KAAK,EAAC,yBAAyB,aACnC,eAAM,KAAK,EAAC,iBAAiB,qBAAY,EACzC,eAAM,KAAK,EAAC,2DAA2D,YAAE,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,GAAQ,IAC1J,CACN,CAAC,CAAC,CAAC,IAAI,IACH,IACD,CACN,CAAC,GACG,IACJ,CACH,CAAA;AACF,CAAC,CAAA","sourcesContent":["import { ReadonlySignal, Signal, useSignal, useSignalEffect } from '@preact/signals'\nimport { EtherSymbol, formatEther, getAddress, Interface, parseEther, TransactionDescription } from 'ethers'\nimport { JSXInternal } from 'preact/src/jsx.js'\nimport { BlockInfo, Bundle, serialize, Signers } from '../types/types.js'\nimport { ProviderStore } from '../library/provider.js'\nimport { Button } from './Button.js'\nimport { useAsyncState } from '../library/asyncState.js'\nimport { BouquetNetwork, BouquetSettings, TransactionList } from '../types/bouquetTypes.js'\nimport { SingleNotice } from './Warns.js'\nimport { GetSimulationStackReply } from '../types/interceptorTypes.js'\nimport { addressString } from '../library/utils.js'\nimport { importFromInterceptor } from './Import.js'\nimport { EtherscanGetABIResult, EtherscanSourceCodeResult, SourcifyMetadataResult } from '../types/apiTypes.js'\nimport { getNetwork } from '../constants.js'\n\nfunction formatTransactionDescription(tx: TransactionDescription) {\n\tif (tx.fragment.inputs.length === 0) return <>{`${tx.name}()`}</>\n\tconst params = tx.fragment.inputs.map((y, index) => <p class='pl-4'>{`${y.name}: ${tx.args[index].toString()}`}</p>)\n\treturn (\n\t\t<>\n\t\t\t<p>{`${tx.name}(`}</p>\n\t\t\t{params}\n\t\t\t<p>)</p>\n\t\t</>\n\t)\n}\nconst etherScanAbiKey = 'PSW8C433Q667DVEX5BCRMGNAH9FSGFZ7Q8'\n\nexport const Transactions = ({\n\tprovider,\n\tbundle,\n\tblockInfo,\n\tbouquetSettings,\n\tsigners,\n}: {\n\tprovider: Signal<ProviderStore | undefined>\n\tbundle: Signal<Bundle | undefined>\n\tblockInfo: Signal<BlockInfo>\n\tsigners: Signal<Signers>\n\tbouquetSettings: Signal<BouquetSettings>\n\tfundingAmountMin: ReadonlySignal<bigint>\n}) => {\n\tconst interfaces = useSignal<{ [address: string]: Interface }>({})\n\tconst decodedTransactions = useSignal<(JSXInternal.Element | null)[]>([])\n\tconst interceptorComparison = useSignal<{ different: boolean, intervalId?: ReturnType<typeof setInterval> }>({ different: true })\n\n\tfunction copyTransactions() {\n\t\tif (!bundle.value) return\n\t\tconst parsedList = TransactionList.safeSerialize(bundle.value.transactions)\n\t\tif ('success' in parsedList && parsedList.success) navigator.clipboard.writeText(JSON.stringify(parsedList.value, null, 2))\n\t}\n\n\tconst fetchingAbis = useAsyncState()\n\n\tasync function fetchAbi(network: BouquetNetwork, address: string) {\n\t\tconst normalizedAddressString = getAddress(address.toLowerCase())\n\t\ttry {\n\t\t\ttry {\n\t\t\t\tif (network.blockExplorerApi !== undefined && network.blockExplorerApi.length > 0) {\n\t\t\t\t\tconst result = await fetch(`${ network.blockExplorerApi }/api?module=contract&action=getsourcecode&address=${ normalizedAddressString }&apiKey=${ etherScanAbiKey }`)\n\t\t\t\t\treturn EtherscanSourceCodeResult.safeParse(await result.json())\n\t\t\t\t}\n\t\t\t} catch(error: unknown) {\n\t\t\t\tconsole.error(error)\n\t\t\t}\n\t\t\tconst result = await fetch(`https://repo.sourcify.dev/contracts/full_match/${ network.chainId.toString(10) }/${ normalizedAddressString }/metadata.json`)\n\t\t\tconst parsed = SourcifyMetadataResult.safeParse(await result.json())\n\t\t\tif (parsed.success) {\n\t\t\t\treturn { success: true, value: { status: '1', result: [{\n\t\t\t\t\tABI: JSON.stringify(parsed.value.output.abi),\n\t\t\t\t\tProxy: '0' //sourcify does not identify this\n\t\t\t\t}] } } as const\n\t\t\t}\n\t\t} catch(error: unknown) {\n\t\t\tconsole.error(error)\n\t\t\treturn { success: false, value: { status: '0' } } as const\n\t\t}\n\t\treturn { success: false, value: { status: '0' } } as const\n\t}\n\n\tasync function fetchAbis() {\n\t\tif (!bundle.value || !bundle.value.transactions) return\n\t\ttry {\n\t\t\tconst uniqueAddresses = [...new Set(bundle.value.transactions.map((tx) => tx.to ? addressString(tx.to) : null ).filter(addr => addr))] as string[]\n\t\t\tconst abis: (string | undefined)[] = []\n\n\t\t\tconst network = getNetwork(bouquetSettings.value, provider.value?.chainId || 1n)\n\t\t\tconst parsedSourceCode = await Promise.all(uniqueAddresses.map(async (address) => await fetchAbi(network, address)))\n\t\t\t// Extract ABI from getSourceCode request if not proxy, otherwise attempt to fetch ABI of implementation\n\t\t\tfor (const contract of parsedSourceCode) {\n\t\t\t\tif (contract.success === false || contract.value.status !== '1') abis.push(undefined)\n\t\t\t\telse {\n\t\t\t\t\tif (contract.value.result[0].Proxy === '1' && contract.value.result[0].Implementation !== '') {\n\t\t\t\t\t\tconst implReq = await fetch(`${ network.blockExplorerApi }/api?module=contract&action=getabi&address=${addressString(contract.value.result[0].Implementation)}&apiKey=${ etherScanAbiKey }`)\n\t\t\t\t\t\tconst implResult = EtherscanGetABIResult.safeParse(await implReq.json())\n\t\t\t\t\t\tabis.push(implResult.success && implResult.value.status === '1' ? implResult.value.result : undefined)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tabis.push(contract.value.result[0].ABI && contract.value.result[0].ABI !== 'Contract source code not verified' ? contract.value.result[0].ABI : undefined)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tinterfaces.value = abis.reduce((acc, curr, index) => {\n\t\t\t\tif (curr) return { ...acc, [`${uniqueAddresses[index]}`]: new Interface(curr) }\n\t\t\t\telse return acc\n\t\t\t}, {})\n\t\t} catch (error) {\n\t\t\tconsole.log('parseTransactionsCb Error:', error)\n\t\t\tinterfaces.value = {}\n\t\t}\n\t}\n\n\tuseSignalEffect(() => {\n\t\tif (interfaces.value && bundle.value) {\n\t\t\tparseTransactions()\n\t\t}\n\t\tif (provider.value && provider.value.isInterceptor && !interceptorComparison.value.intervalId) createCompareInterval()\n\t})\n\n\tconst parseTransactions = async () => {\n\t\tif (!bundle.value) return\n\t\tdecodedTransactions.value = bundle.value.transactions.map((tx) => {\n\t\t\tif (tx.to && tx.input && tx.input.length > 0) {\n\t\t\t\tconst contractAddr = addressString(tx.to)\n\t\t\t\tconst txDescription = interfaces.value[contractAddr] ? interfaces.value[contractAddr].parseTransaction({ value: tx.value ?? undefined, data: tx.input.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '0x') }) : null\n\t\t\t\treturn txDescription ? formatTransactionDescription(txDescription) : null\n\t\t\t}\n\t\t\treturn null\n\t\t})\n\t}\n\n\tconst compare = async () => {\n\t\tif (!provider.value || !provider.value.isInterceptor || !bundle.value) return false\n\t\ttry {\n\t\t\t// fetch stack from Interceptor\n\t\t\tconst { payload } = await provider.value.provider.send('interceptor_getSimulationStack', ['1.0.0'])\n\t\t\tconst tryParse = GetSimulationStackReply.safeParse(payload)\n\t\t\tif (!tryParse.success) return false\n\t\t\tlet parsedInterceptorTransactions = TransactionList.parse(serialize(GetSimulationStackReply, tryParse.value).map(({ from, to, value, input, gasLimit, chainId }) => ({ from, to, value, input, gasLimit, chainId })))\n\t\t\tif (parsedInterceptorTransactions.length === 0) return false\n\n\t\t\t// Detect 'make me rich'\n\t\t\tif (parsedInterceptorTransactions.length >= 2 && parsedInterceptorTransactions[0].to === parsedInterceptorTransactions[1].from && parsedInterceptorTransactions[0].value === parseEther('200000')) {\n\t\t\t\tconst fundingAddrr = parsedInterceptorTransactions[0].from\n\t\t\t\tparsedInterceptorTransactions = parsedInterceptorTransactions.map(tx => tx.from === fundingAddrr ? { ...tx, from: 'FUNDING' } : tx)\n\t\t\t}\n\n\t\t\t// Compare\n\t\t\tconst interceptorValue = TransactionList.serialize(parsedInterceptorTransactions.filter(tx => tx.from !== 'FUNDING'))\n\t\t\tconst bouquetValue = TransactionList.serialize(bundle.value.transactions.filter(tx => tx.from !== 'FUNDING'))\n\t\t\treturn JSON.stringify(interceptorValue) !== JSON.stringify(bouquetValue)\n\t\t} catch {\n\t\t\treturn false\n\t\t}\n\t}\n\n\tconst compareWithInterceptor = async () => {\n\t\tconst different = await compare()\n\t\tinterceptorComparison.value = { ...interceptorComparison.value, different }\n\t}\n\n\tasync function createCompareInterval() {\n\t\tif (!provider.value || !provider.value.isInterceptor) return\n\t\tconst different = await compare()\n\t\tclearInterval(interceptorComparison.value.intervalId)\n\t\tinterceptorComparison.value = { different, intervalId: setInterval(compareWithInterceptor, 10000) }\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h2 className='font-bold text-2xl'>Your Transactions</h2>\n\t\t\t<div className='flex flex-row gap-4'>\n\t\t\t\t<Button variant='secondary' disabled={fetchingAbis.value.value.state === 'pending'} onClick={() => fetchingAbis.waitFor(fetchAbis)}>Decode Transactions From Etherscan & Sourcify</Button>\n\t\t\t\t<Button variant='secondary' onClick={copyTransactions}><>Copy Transaction List\n\t\t\t\t\t<svg\n\t\t\t\t\t\tclassName='h-8 inline-block'\n\t\t\t\t\t\taria-hidden='true'\n\t\t\t\t\t\tfill='none'\n\t\t\t\t\t\tstroke='currentColor'\n\t\t\t\t\t\tstroke-width='1.5'\n\t\t\t\t\t\tviewBox='0 0 24 24'\n\t\t\t\t\t\txmlns='http://www.w3.org/2000/svg'\n\t\t\t\t\t>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\td='M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6'\n\t\t\t\t\t\t\tstroke-linecap='round'\n\t\t\t\t\t\t\tstroke-linejoin='round'\n\t\t\t\t\t\t></path>\n\t\t\t\t\t</svg>\n\t\t\t\t</>\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t{interceptorComparison.value.different ? <SingleNotice variant='warn' title='Potentially Outdated Transaction List' description={<>The transactions imported in Bouquet differ from the current simulation in The Interceptor extension. <button onClick={() => importFromInterceptor(bundle, provider, blockInfo, signers, bouquetSettings)} class='underline text-white font-semibold'>Import From Interceptor</button> </>} /> : null}\n\t\t\t<div class='flex w-full flex-col gap-2'>\n\t\t\t\t{bundle.value?.transactions.map((tx, index) => (\n\t\t\t\t\t<div class='flex w-full min-h-[96px] border border-white/90'>\n\t\t\t\t\t\t<div class='flex w-24 flex-col items-center justify-center text-white'>\n\t\t\t\t\t\t\t<span class='text-lg font-bold'>#{index}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='bg-gray-500/30 flex w-full justify-center flex-col gap-2 p-4 text-sm font-semibold'>\n\t\t\t\t\t\t\t<div class='flex gap-2 items-center'>\n\t\t\t\t\t\t\t\t<span class='w-10 text-right'>From</span>\n\t\t\t\t\t\t\t\t<span class='bg-black px-2 py-1 font-mono font-medium'>\n\t\t\t\t\t\t\t\t\t{tx.from !== 'FUNDING' ? addressString(tx.from) : tx.from}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='flex gap-2 items-center'>\n\t\t\t\t\t\t\t\t<span class='w-10 text-right'>To</span>\n\t\t\t\t\t\t\t\t<span class='bg-black px-2 py-1 font-mono font-medium'>{tx.to ? addressString(tx.to) : 'Contract Deployment'}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='flex gap-2 items-center'>\n\t\t\t\t\t\t\t\t<span class='w-10 text-right'>Value</span>\n\t\t\t\t\t\t\t\t<span class='bg-black px-2 py-1 font-mono font-medium'>{EtherSymbol}{formatEther(tx.value + (tx.from === 'FUNDING' && bundle.value && bundle.value.containsFundingTx ? bundle.value.totalGas * (blockInfo.value.baseFee + blockInfo.value.priorityFee): 0n))} + {EtherSymbol}{formatEther(tx.gasLimit * (blockInfo.value.baseFee + blockInfo.value.priorityFee))} Gas Fee</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{decodedTransactions.value[index] ? (\n\t\t\t\t\t\t\t\t<div class='flex gap-2 items-center'>\n\t\t\t\t\t\t\t\t\t<span class='w-10 text-right'>Data</span>\n\t\t\t\t\t\t\t\t\t<span class='bg-black px-2 py-1 font-mono font-medium w-full break-all'>{decodedTransactions.value[index]}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : tx.input && tx.input.length > 0 ? (\n\t\t\t\t\t\t\t\t<div class='flex gap-2 items-center'>\n\t\t\t\t\t\t\t\t\t<span class='w-10 text-right'>Data</span>\n\t\t\t\t\t\t\t\t\t<span class='bg-black px-2 py-1 font-mono font-medium w-full break-all'>{tx.input.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '0x')}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t)\n}\n"]}