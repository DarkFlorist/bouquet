{"version":3,"file":"Import.js","sourceRoot":"","sources":["../../ts/components/Import.tsx"],"names":[],"mappings":"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","sourcesContent":["import { batch, Signal, useSignal } from '@preact/signals'\nimport { useState } from 'preact/hooks'\nimport { parseEther } from 'ethers'\nimport { connectBrowserProvider, ProviderStore } from '../library/provider.js'\nimport { GetSimulationStackReply } from '../types/interceptorTypes.js'\nimport { Button } from './Button.js'\nimport { Bundle, serialize, Signers } from '../types/types.js'\nimport { EthereumAddress } from '../types/ethereumTypes.js'\nimport { BouquetSettings, TransactionList } from '../types/bouquetTypes.js'\nimport { ImportModal } from './ImportModal.js'\nimport { SingleNotice } from './Warns.js'\nimport { addressString } from '../library/utils.js'\n\nexport async function importFromInterceptor(\n\tbundle: Signal<Bundle | undefined>,\n\tprovider: Signal<ProviderStore | undefined>,\n\tblockInfo: Signal<{\n\t\tblockNumber: bigint\n\t\tbaseFee: bigint\n\t\tpriorityFee: bigint\n\t}>,\n\tsigners: Signal<Signers> | undefined,\n\tbouquetSettings: Signal<BouquetSettings>\n) {\n\tif (!window.ethereum || !window.ethereum.request) throw Error('No Ethereum wallet detected')\n\tconnectBrowserProvider(provider, blockInfo, signers, bouquetSettings)\n\n\tconst { payload } = await window.ethereum\n\t\t.request({\n\t\t\tmethod: 'interceptor_getSimulationStack',\n\t\t\tparams: ['1.0.0'],\n\t\t})\n\t\t.catch((err: { code: number }) => {\n\t\t\tif (err?.code === -32601) {\n\t\t\t\tthrow new Error('Wallet does not support returning simulations')\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Unknown Error: ${JSON.stringify(err)}`)\n\t\t\t}\n\t\t})\n\n\tconst tryParse = GetSimulationStackReply.safeParse(payload)\n\tif (!tryParse.success) throw new Error('Wallet does not support returning simulations')\n\tif (tryParse.value.length === 0) throw new Error('You have no transactions on your simulation')\n\n\tconst converted = TransactionList.safeParse(serialize(GetSimulationStackReply, tryParse.value).map(({ from, to, value, input, gasLimit, chainId }) => ({ from, to, value, input, gasLimit, chainId })))\n\tif (!converted.success) throw new Error('Malformed simulation stack')\n\n\tif (converted.value.length >= 2 && converted.value[0].to === converted.value[1].from && converted.value[0].value === parseEther('200000')) {\n\t\tconst fundingAddr = converted.value[0].from\n\t\tconverted.value = converted.value.map(tx => tx.from === fundingAddr ? { ...tx, from: 'FUNDING' } : tx)\n\t}\n\n\tconst uniqueToAddresses = [...new Set(converted.value.map(({ from }) => from))]\n\tconst containsFundingTx = uniqueToAddresses.includes('FUNDING')\n\tconst uniqueSigners = uniqueToAddresses.filter((address): address is EthereumAddress => address !== 'FUNDING').map(address => addressString(address))\n\n\tconst totalGas = converted.value.reduce((sum, tx) => tx.gasLimit + sum, 0n)\n\n\t// Take addresses that recieved funding, determine spend deficit - gas fees\n\tconst fundingRecipients = new Set(converted.value.reduce((result: bigint[], tx) => (tx.to && tx.from === 'FUNDING' ? [...result, tx.to] : result), []))\n\n\tconst spenderDeficits = tryParse.value.reduce((amounts: { [account: string]: { deficit: bigint, credit: bigint } }, tx) => {\n\t\tif (!fundingRecipients.has(tx.from)) return amounts\n\t\tconst receipientBalanceChanges = tx.balanceChanges.filter(x => x.address === tx.from)\n\n\t\tconst consumed = tx.value\n\t\t// Rebate is the difference between balance change and consume amount (if there were any internal transactions sending ETH back), ignore gas fees\n\t\tconst balanceChange = receipientBalanceChanges.reduce((result: bigint, balanceChange) => result + balanceChange.after - balanceChange.before, 0n)\n\t\tconst rebate = balanceChange + consumed + tx.maxPriorityFeePerGas * tx.gasSpent\n\n\t\t// Calcuate current deficit\n\t\tif (tx.from.toString() in amounts) {\n\t\t\t// If credit, deduct current credit from new consumption, or cancel out new consumption and open credit - whichever is smaller\n\t\t\tif (amounts[tx.from.toString()].credit > 0n) {\n\t\t\t\tif (amounts[tx.from.toString()].credit <= consumed) {\n\t\t\t\t\tamounts[tx.from.toString()].deficit += consumed - amounts[tx.from.toString()].credit\n\t\t\t\t\tamounts[tx.from.toString()].credit = rebate\n\t\t\t\t} else {\n\t\t\t\t\t// If consumed less than current rebates, deficit does not increase.\n\t\t\t\t\tamounts[tx.from.toString()].credit += rebate - consumed\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tamounts[tx.from.toString()] = { deficit: consumed, credit: rebate }\n\t\t}\n\t\treturn amounts\n\n\t}, {})\n\n\tconst inputValue = Object.values(spenderDeficits).reduce((sum, spender) => spender.deficit + sum, 0n)\n\n\t// Copy value and set, input of funding to inputValue\n\tconst transactions = [...converted.value]\n\tif (containsFundingTx) {\n\t\ttransactions[0] = { ...transactions[0], value: inputValue }\n\t}\n\n\tlocalStorage.setItem('payload', JSON.stringify(TransactionList.serialize(transactions)))\n\tbundle.value = { transactions, containsFundingTx, uniqueSigners, totalGas, inputValue }\n}\n\nexport const Import = ({\n\tbundle,\n\tprovider,\n\tblockInfo,\n\tsigners,\n\tbouquetSettings,\n}: {\n\tbundle: Signal<Bundle | undefined>\n\tprovider: Signal<ProviderStore | undefined>\n\tblockInfo: Signal<{\n\t\tblockNumber: bigint\n\t\tbaseFee: bigint\n\t\tpriorityFee: bigint\n\t}>\n\tsigners: Signal<Signers>\n\tbouquetSettings: Signal<BouquetSettings>\n}) => {\n\tconst showImportModal = useSignal<boolean>(false)\n\tconst [error, setError] = useState<string | undefined>(undefined)\n\n\tconst clearPayload = () => {\n\t\tbatch(() => {\n\t\t\tbundle.value = undefined\n\t\t\tlocalStorage.removeItem('payload')\n\t\t\tsigners.value.bundleSigners = {}\n\t\t\tsetError('')\n\t\t\t// Keep burner wallet as long as it has funds, should clear is later if there is left over dust but not needed.\n\t\t\t// if (fundingAccountBalance.value === 0n) signers.value.burner = undefined\n\t\t})\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{showImportModal.value ? <ImportModal bundle={bundle} clearError={() => setError('')} display={showImportModal} /> : null}\n\t\t\t<h2 className='font-bold text-2xl'><span class='text-gray-500'>1.</span> Import</h2>\n\t\t\t<div className='flex flex-col w-full gap-6'>\n\t\t\t\t<div className='flex flex-col sm:flex-row gap-4'>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => importFromInterceptor(bundle, provider, blockInfo, signers, bouquetSettings).then(() => setError(undefined)).catch((err: Error) => setError(err.message))}\n\t\t\t\t\t>\n\t\t\t\t\t\tImport Payload from The Interceptor\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => showImportModal.value = true}\n\t\t\t\t\t>\n\t\t\t\t\t\tImport From JSON\n\t\t\t\t\t</Button>\n\t\t\t\t\t{bundle.value ? (\n\t\t\t\t\t\t<Button variant='secondary' onClick={clearPayload}>\n\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t{error ? <SingleNotice variant='error' title='Could Not Import Transactions' description={error} /> : null}\n\t\t\t\t{error && error === 'Wallet does not support returning simulations' ? (\n\t\t\t\t\t<h3 className='text-xl'>\n\t\t\t\t\t\tDon't have The Interceptor Installed? Install it here{' '}\n\t\t\t\t\t\t<a className='font-bold text-accent underline' href='https://dark.florist'>\n\t\t\t\t\t\t\there\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t.\n\t\t\t\t\t</h3>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t)\n\t}\n"]}