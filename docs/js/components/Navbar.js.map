{"version":3,"file":"Navbar.js","sourceRoot":"","sources":["../../ts/components/Navbar.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Signal, useComputed, useSignal } from '@preact/signals'\nimport { ProviderStore } from '../library/provider.js'\nimport { EthereumAddress } from '../types/ethereumTypes.js'\nimport { BlockInfo, Bundle, serialize, Signers } from '../types/types.js'\nimport { Blockie } from './Blockie.js'\nimport { SettingsIcon, SettingsModal } from './Settings.js'\nimport { Button } from './Button.js'\nimport { importFromInterceptor } from './Import.js'\nimport { BouquetSettings } from '../types/bouquetTypes.js'\nimport { getNetwork } from '../constants.js'\n\nexport const Navbar = ({\n\tprovider,\n\tbouquetSettings,\n\tblockInfo,\n\tbundle,\n\tsigners\n}: {\n\tprovider: Signal<ProviderStore | undefined>,\n\tblockInfo: Signal<BlockInfo>,\n\tbouquetSettings: Signal<BouquetSettings>,\n\tbundle: Signal<Bundle | undefined>,\n\tsigners: Signal<Signers>,\n}) => {\n\tconst switchNetwork = async (e: Event) => {\n\t\tconst elm = e.target as HTMLSelectElement\n\t\tprovider.peek()?.provider.send('wallet_switchEthereumChain', [{ chainId: `0x${ BigInt(elm.value).toString(16) }` }])\n\t}\n\n\tconst blockieScale = useSignal(5)\n\tconst showSettings = useSignal(false)\n\tconst walletAddress = useComputed(() => provider.value?.walletAddress ?? 0n)\n\tconst bouquetNetwork = useComputed(() => getNetwork(bouquetSettings.value, provider.value?.chainId || 1n))\n\treturn (\n\t\t<div className='flex flex-col w-full sm:flex-row items-center justify-between gap-4 border-slate-400/30 h-12'>\n\t\t\t<h1 className='font-extrabold text-4xl'>üíê</h1>\n\t\t\t<div className='flex gap-4 items-center justify-center w-min max-w-full px-4 sm:px-0 text-sm sm:text-md'>\n\t\t\t\t{provider.value ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className='flex flex-col items-end justify-around h-full w-full'>\n\t\t\t\t\t\t\t<p className='font-bold text-right w-min max-w-full truncate'>{serialize(EthereumAddress, provider.value.walletAddress)}</p>\n\t\t\t\t\t\t\t<span className='text-gray-500 text-md w-max flex gap-1 items-center'>\n\t\t\t\t\t\t\t\t<svg width='1em' height='1em' viewBox='0 0 48 48' xmlns='http://www.w3.org/2000/svg' className='inline-block'><path fill='currentColor' d='M44 32h-2v-8a2 2 0 0 0-2-2H26v-6h2a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-8a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h2v6H8a2 2 0 0 0-2 2v8H4a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-8a2 2 0 0 0-2-2h-2v-6h12v6h-2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-8a2 2 0 0 0-2-2h-2v-6h12v6h-2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-8a2 2 0 0 0-2-2Zm-34 8H6v-4h4ZM22 8h4v4h-4Zm4 32h-4v-4h4Zm16 0h-4v-4h4Z' data-name='icons Q2'></path></svg>\n\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\tvalue={provider.value.chainId.toString()}\n\t\t\t\t\t\t\t\t\tonChange={switchNetwork}\n\t\t\t\t\t\t\t\t\tclassName='px-2 py-1 bg-black'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{bouquetSettings.value.map((network) => <option value={network.chainId.toString()}>{ network.networkName }</option>)}\n\t\t\t\t\t\t\t\t\t{bouquetSettings.value.find((network) => network.chainId === provider.value?.chainId) === undefined ? <option value={provider.value?.chainId.toString()}>{`ChainId: ${provider.value.chainId}`}</option> : <></>}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div >\n\t\t\t\t\t\t<Blockie address={walletAddress} scale={blockieScale} />\n\t\t\t\t\t</>\n\t\t\t\t) : (!provider.value && bundle.value ? <p className='w-max'> No Wallet Connected </p> :\n\t\t\t\t\t<div className='w-max'>\n\t\t\t\t\t\t<Button onClick={() => importFromInterceptor(bundle, provider, blockInfo, signers, bouquetSettings)} >\n\t\t\t\t\t\t\tConnect Wallet\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<button class='hover:rotate-45 duration-200 ml-2' onClick={() => (showSettings.value = true)}>\n\t\t\t\t\t<SettingsIcon />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<SettingsModal display={showSettings} bouquetNetwork={bouquetNetwork} bouquetSettings = {bouquetSettings}/>\n\t\t</div>\n\t)\n}\n"]}