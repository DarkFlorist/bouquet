{"version":3,"file":"ConfigureFunding.js","sourceRoot":"","sources":["../../ts/components/ConfigureFunding.tsx"],"names":[],"mappings":"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","sourcesContent":["import { batch, ReadonlySignal, Signal, useComputed, useSignal, useSignalEffect } from '@preact/signals'\nimport { EtherSymbol, formatEther, getAddress, JsonRpcProvider, Wallet } from 'ethers'\nimport { JSX } from 'preact/jsx-runtime'\nimport { useAsyncState } from '../library/asyncState.js'\nimport { getMaxBaseFeeInFutureBlock } from '../library/bundleUtils.js'\nimport { ProviderStore } from '../library/provider.js'\nimport { addressString } from '../library/utils.js'\nimport { EthereumAddress } from '../types/ethereumTypes.js'\nimport { BlockInfo, Bundle, Signers } from '../types/types.js'\nimport { Button } from './Button.js'\nimport { SingleNotice } from './Warns.js'\nimport { BouquetNetwork, BouquetSettings } from '../types/bouquetTypes.js'\nimport { getNetwork } from '../constants.js'\n\nexport const ConfigureFunding = ({\n\tprovider,\n\tbouquetSettings,\n\tbundle,\n\tfundingAmountMin,\n\tsigners,\n\tblockInfo,\n}: {\n\tprovider: Signal<ProviderStore | undefined>\n\tbundle: Signal<Bundle | undefined>\n\tsigners: Signal<Signers>\n\tfundingAmountMin: ReadonlySignal<bigint>\n\tblockInfo: Signal<BlockInfo>,\n\tbouquetSettings: Signal<BouquetSettings>\n}) => {\n\tconst signerKeys = useSignal<{\n\t\t[address: string]: { input: string; wallet: Wallet | null }\n\t}>({})\n\n\tconst bouquetNetwork = useComputed(() => getNetwork(bouquetSettings.value, provider.value?.chainId || 1n))\n\n\tuseSignalEffect(() => {\n\t\tif (!bundle.value) signerKeys.value = {}\n\t})\n\n\tif (bundle.peek() && Object.keys(signerKeys.peek()).length === 0) {\n\t\tsignerKeys.value =\n\t\t\tbundle.value && Object.keys(signerKeys.peek()).length === 0\n\t\t\t\t? bundle.value.uniqueSigners.reduce(\n\t\t\t\t\t(\n\t\t\t\t\t\tcurr: {\n\t\t\t\t\t\t\t[address: string]: { input: string; wallet: Wallet | null }\n\t\t\t\t\t\t},\n\t\t\t\t\t\taddress,\n\t\t\t\t\t) => {\n\t\t\t\t\t\tcurr[getAddress(address)] = { input: '', wallet: null }\n\t\t\t\t\t\treturn curr\n\t\t\t\t\t},\n\t\t\t\t\t{},\n\t\t\t\t)\n\t\t\t\t: {}\n\t}\n\n\tblockInfo.subscribe(() => {\n\t\tif (provider.value && signers.value.burner) {\n\t\t\tprovider.value.provider.getBalance(signers.value.burner.address).then((balance) => (signers.value.burnerBalance = balance))\n\t\t}\n\t})\n\n\tfunction copyBurnerToClipboard() {\n\t\tif (!signers.value.burner) return\n\t\tnavigator.clipboard.writeText(signers.value.burner.address)\n\t}\n\n\tconst showWithdrawModal = useSignal<boolean>(false)\n\n\tfunction openWithdrawModal() {\n\t\tshowWithdrawModal.value = true\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<WithdrawModal {...{ display: showWithdrawModal, blockInfo, signers, bouquetNetwork, provider }}/>\n\t\t\t{bundle.value && bundle.value.containsFundingTx && signers.value.burner ? (\n\t\t\t\t<div className='flex flex-col w-full gap-4'>\n\t\t\t\t\t<h3 className='text-2xl font-semibold'>Deposit To Funding Account</h3>\n\t\t\t\t\t<p className='text-orange-600 font-semibold'>This is a temporary account, send only enough needed plus a tiny bit to account for possible rising gas price changes.</p>\n\t\t\t\t\t<div className='flex items-center gap-2 flex-wrap'>\n\t\t\t\t\t\t<Button variant='secondary' onClick={copyBurnerToClipboard}>\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<span className='text-xs sm:text-base'>{signers.value.burner.address}</span>\n\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\tclassName='h-8 inline-block'\n\t\t\t\t\t\t\t\t\taria-hidden='true'\n\t\t\t\t\t\t\t\t\tfill='none'\n\t\t\t\t\t\t\t\t\tstroke='currentColor'\n\t\t\t\t\t\t\t\t\tstroke-width='1.5'\n\t\t\t\t\t\t\t\t\tviewBox='0 0 24 24'\n\t\t\t\t\t\t\t\t\txmlns='http://www.w3.org/2000/svg'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\td='M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6'\n\t\t\t\t\t\t\t\t\t\tstroke-linecap='round'\n\t\t\t\t\t\t\t\t\t\tstroke-linejoin='round'\n\t\t\t\t\t\t\t\t\t></path>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button variant='primary' onClick={openWithdrawModal}>\n\t\t\t\t\t\t\t<span className='flex gap-2 text-sm items-center'>\n\t\t\t\t\t\t\t\tWithdraw ETH\n\t\t\t\t\t\t\t\t<svg class='h-8 inline-block' aria-hidden='true' fill='none' stroke='currentColor' stroke-width='1.5' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n\t\t\t\t\t\t\t\t\t<path d='M8.25 9.75h4.875a2.625 2.625 0 010 5.25H12M8.25 9.75L10.5 7.5M8.25 9.75L10.5 12m9-7.243V21.75l-3.75-1.5-3.75 1.5-3.75-1.5-3.75 1.5V4.757c0-1.108.806-2.057 1.907-2.185a48.507 48.507 0 0111.186 0c1.1.128 1.907 1.077 1.907 2.185z' stroke-linecap='round' stroke-linejoin='round'></path>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p className='font-semibold sm:text-lg'>\n\t\t\t\t\t\tWallet Balance: <span className='font-medium font-mono'>{EtherSymbol}{formatEther(signers.value.burnerBalance)}</span>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\tMinimum Required Balance: <span className='font-medium font-mono'>{EtherSymbol}{formatEther(fundingAmountMin.value)}</span>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</>\n\t)\n}\n\nconst WithdrawModal = ({ display, blockInfo, signers, provider, bouquetNetwork }: { display: Signal<boolean>, provider: Signal<ProviderStore | undefined>, signers: Signal<Signers>, blockInfo: Signal<BlockInfo>, bouquetNetwork: Signal<BouquetNetwork> }) => {\n\tif (!display.value) return null\n\n\tconst recipientAddress = useSignal<{ input: string, address?: EthereumAddress }>({ input: '' })\n\tconst inputStyle = useComputed(() => `flex flex-col justify-center border h-16 outline-none px-4 focus-within:bg-white/5 bg-transparent ${recipientAddress.value.address ? 'border-green-400' : (recipientAddress.value.input ? 'border-red-400' : 'border-white/50 focus-within:border-white/80')}`)\n\tfunction parseInput(input: string) {\n\t\tconst address = EthereumAddress.safeParse(input)\n\t\trecipientAddress.value = { input, address: address.success ? address.value : undefined }\n\t}\n\n\tconst withdrawAmount = useComputed(() => {\n\t\tlet maxFeePerGas = getMaxBaseFeeInFutureBlock(blockInfo.value.baseFee, 5n) + blockInfo.value.priorityFee;\n\t\tlet fee = maxFeePerGas * 21000n\n\t\tlet amount = signers.value.burnerBalance - fee\n\t\treturn { amount, fee, maxFeePerGas }\n\t})\n\n\tconst { value: signedMessage, waitFor } = useAsyncState<string>()\n\n\t// Default check if we know the network, can also switch to true if sending to known RPC fails\n\tconst useBrowserProvider = useSignal<boolean>(false)\n\tuseSignalEffect(() => { useBrowserProvider.value = Boolean(provider.value && bouquetNetwork.value.mempoolSubmitRpcEndpoint === undefined) })\n\n\tfunction withdraw() {\n\t\twaitFor(async () => {\n\t\t\tif (withdrawAmount.value.amount <= 0n) throw 'Funding account\\'s balance is to small to withdraw'\n\t\t\tif (!signers.value.burner) throw 'No funding account found'\n\t\t\tif (!provider.value) throw 'User not connected'\n\t\t\tif (!recipientAddress.value.address) throw 'No recipient provided'\n\n\t\t\tif (useBrowserProvider.value === true) {\n\t\t\t\ttry {\n\t\t\t\t\tconst burnerWithBrowserProvider = signers.value.burner.connect(provider.value.provider)\n\t\t\t\t\tconst txInput = await burnerWithBrowserProvider.populateTransaction({ chainId: provider.value.chainId, from: signers.value.burner.address, to: addressString(recipientAddress.value.address), gasLimit: 21000, type: 2, value: withdrawAmount.value.amount, maxFeePerGas: withdrawAmount.value.maxFeePerGas })\n\t\t\t\t\tconst tx = await burnerWithBrowserProvider.signTransaction(txInput)\n\t\t\t\t\tconst txHash = await provider.value.provider.send('eth_sendRawTransaction', [tx])\n\t\t\t\t\treturn txHash as string\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthrow error\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bouquetNetwork.value.mempoolSubmitRpcEndpoint === undefined) throw new Error('No RPC URL set and not connected to wallet')\n\t\t\tconst fundingWithProvider = signers.value.burner.connect(new JsonRpcProvider(bouquetNetwork.value.mempoolSubmitRpcEndpoint))\n\t\t\ttry {\n\t\t\t\tconst tx = await fundingWithProvider.sendTransaction({ chainId: provider.value.chainId, from: signers.value.burner.address, to: addressString(recipientAddress.value.address), gasLimit: 21000, type: 2, value: withdrawAmount.value.amount, maxFeePerGas: withdrawAmount.value.maxFeePerGas })\n\t\t\t\tfundingWithProvider.provider?.destroy()\n\t\t\t\treturn tx.hash\n\t\t\t} catch (error) {\n\t\t\t\tconsole.warn('Error sending burner withdraw tx to known RPC:', bouquetNetwork.value.mempoolSubmitRpcEndpoint, ' error:', error)\n\t\t\t\tfundingWithProvider.provider?.destroy()\n\t\t\t\tuseBrowserProvider.value = true\n\t\t\t\tthrow 'Unknown network! If you have Interceptor installed and simulation mode on please switch to signing mode and try again.'\n\t\t\t}\n\t\t})\n\t}\n\n\tfunction close() {\n\t\tbatch(() => {\n\t\t\tdisplay.value = false\n\t\t\trecipientAddress.value = { input: '' }\n\t\t\tsignedMessage.value.state = 'inactive'\n\t\t})\n\t}\n\n\treturn (\n\t\t<div onClick={close} className='bg-white/10 w-full h-full inset-0 fixed p-4 flex flex-col items-center md:pt-24'>\n\t\t\t<div class='h-max w-full max-w-xl px-8 py-4 flex flex-col gap-4 bg-black' onClick={(e) => e.stopPropagation()}>\n\t\t\t\t<h2 className='text-xl font-semibold'>Withdraw From Funding Account</h2>\n\t\t\t\t<div className={inputStyle.value}>\n\t\t\t\t\t<span className='text-sm text-gray-500'>ETH Recipient</span>\n\t\t\t\t\t<input onInput={(e: JSX.TargetedEvent<HTMLInputElement>) => parseInput(e.currentTarget.value)} type='text' className='bg-transparent outline-none placeholder:text-gray-600' placeholder='0x...' />\n\t\t\t\t</div>\n\t\t\t\t{withdrawAmount.value.amount > 0n\n\t\t\t\t\t? (<p>Withdraw {EtherSymbol} {formatEther(withdrawAmount.value.amount)} + {EtherSymbol} {formatEther(withdrawAmount.value.fee)} fee</p>)\n\t\t\t\t\t: (<p>Transfer fee ({EtherSymbol} {formatEther(withdrawAmount.value.fee)}) is more than funding account balance</p>)}\n\t\t\t\t<div className='flex gap-2'>\n\t\t\t\t\t<Button onClick={withdraw} variant='primary'>Withdraw</Button>\n\t\t\t\t</div>\n\t\t\t\t<p>{signedMessage.value.state === 'rejected' ? <SingleNotice variant='error' description={signedMessage.value.error.message} title='Error Withdrawing' /> : ''}</p>\n\t\t\t\t<p>{signedMessage.value.state === 'resolved' ? <SingleNotice variant='success' description={bouquetNetwork.value.blockExplorer ? <span>Transaction submitted with TX Hash <a className='hover:underline' href={`${bouquetNetwork.value.blockExplorer}tx/${signedMessage.value.value}`} target='_blank'>{signedMessage.value.value}</a></span> : <span>Transaction submitted with TX Hash {signedMessage.value.value}</span>} title='Transaction Submitted' /> : ''}</p>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n"]}