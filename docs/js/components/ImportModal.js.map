{"version":3,"file":"ImportModal.js","sourceRoot":"","sources":["../../ts/components/ImportModal.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Signal, useComputed, useSignal } from '@preact/signals'\nimport { JSX } from 'preact/jsx-runtime'\nimport { addressString } from '../library/utils.js'\nimport { TransactionList } from '../types/bouquetTypes.js'\nimport { EthereumAddress } from '../types/ethereumTypes.js'\nimport { Bundle } from '../types/types.js'\nimport { Button } from './Button.js'\n\nconst placeholder = `[\n  {\n    \"from\": \"0xb3cd36cfaa07652dbfecca76f438ff8998a4f539\",\n    \"to\": \"0xb4fbf271143f4fbf7b91a5ded31805e42b2208d6\",\n    \"value\": \"0x16345785d8a0000\",\n    \"input\": \"0xd0e30db0\",\n    \"chainId\": \"0x1\",\n    \"gasLimit\": \"0x15f90\"\n  },\n  {\n    \"from\": \"0xb3cd36cfaa07652dbfecca76f438ff8998a4f539\",\n    \"to\": \"0xb4fbf271143f4fbf7b91a5ded31805e42b2208d6\",\n    \"value\": \"0x0\",\n    \"input\": \"0x2e1a7d4d000000000000000000000000000000000000000000000000016345785d8a0000\",\n    \"chainId\": \"0x1\",\n    \"gasLimit\": \"0x15f90\"\n  }\n]`\n\nexport const ImportModal = ({ display, bundle, clearError }: { display: Signal<boolean>, clearError: () => void, bundle: Signal<Bundle | undefined> }) => {\n\tconst jsonInput = useSignal<string>('')\n\n\tconst isValid = useComputed(() => {\n\t\tif (!jsonInput.value) return false\n\t\ttry {\n\t\t\tconst { success } = TransactionList.safeParse(JSON.parse(jsonInput.value))\n\t\t\treturn success\n\t\t} catch {\n\t\t\treturn false\n\t\t}\n\t})\n\n\tfunction importJson() {\n\t\tif (!isValid.peek()) return\n\t\tconst txList = TransactionList.parse(JSON.parse(jsonInput.value))\n\n\t\tlocalStorage.setItem('payload', JSON.stringify(TransactionList.serialize(txList)))\n\n\t\tconst uniqueToAddresses = [...new Set(txList.map(({ from }) => from))]\n\t\tconst containsFundingTx = uniqueToAddresses.includes('FUNDING')\n\t\tconst uniqueSigners = uniqueToAddresses.filter((address): address is EthereumAddress => address !== 'FUNDING').map(address => addressString(address))\n\n\t\tconst totalGas = txList.reduce((sum, tx) => tx.gasLimit + sum, 0n)\n\t\tconst inputValue = txList.reduce((sum, tx) => (tx.from === 'FUNDING' ? tx.value : 0n) + sum, 0n)\n\n\t\tbundle.value = { transactions: txList, containsFundingTx, uniqueSigners, totalGas, inputValue }\n\t\tclearError()\n\t\tclose()\n\t}\n\n\tfunction close() {\n\t\tjsonInput.value = ''\n\t\tdisplay.value = false\n\t}\n\treturn display.value ? (\n\t\t<div onClick={close} className='bg-white/10 w-full h-full inset-0 fixed p-4 flex flex-col items-center md:pt-24'>\n\t\t\t<div class='h-max px-8 py-4 flex flex-col gap-4 bg-black' onClick={(e) => e.stopPropagation()}>\n\t\t\t\t<h2 className='text-xl font-semibold'>Import Transactions From JSON</h2>\n\t\t\t\t<div>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\tonInput={(e: JSX.TargetedEvent<HTMLTextAreaElement>) => jsonInput.value = e.currentTarget.value}\n\t\t\t\t\t\tvalue={jsonInput.value}\n\t\t\t\t\t\ttype='url'\n\t\t\t\t\t\tclassName={`p-2 w-96 h-96 border ${jsonInput.value && isValid.value ? 'border-green-400 bg-green-200/10' : jsonInput.value && !isValid.value ? 'border-red-400 bg-red-200/10' : 'border-white/50 focus-within:border-white/90 bg-transparent focus-within:bg-white/5'} outline-none px-4`}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='flex gap-2'>\n\t\t\t\t\t<Button onClick={importJson} disabled={!isValid.value} variant='primary'>Import</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t) : null\n}\n"]}